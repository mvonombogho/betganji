generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id          String       @id @default(auto()) @map("_id") @db.ObjectId
  email       String       @unique
  name        String?
  password    String
  predictions Prediction[]
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
}

model Match {
  id            String       @id @default(auto()) @map("_id") @db.ObjectId
  homeTeam      Team         @relation("HomeTeam", fields: [homeTeamId], references: [id])
  homeTeamId    String       @db.ObjectId
  awayTeam      Team         @relation("AwayTeam", fields: [awayTeamId], references: [id])
  awayTeamId    String       @db.ObjectId
  competition   String
  datetime      DateTime
  status        MatchStatus  @default(SCHEDULED)
  result        MatchResult?
  homeScore     Int?
  awayScore     Int?
  odds          Odds[]
  predictions   Prediction[]
  createdAt     DateTime     @default(now())
  updatedAt     DateTime     @updatedAt
}

model Team {
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  homeMatches Match[]   @relation("HomeTeam")
  awayMatches Match[]   @relation("AwayTeam")
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model Odds {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  match     Match    @relation(fields: [matchId], references: [id])
  matchId   String   @db.ObjectId
  homeWin   Float
  draw      Float
  awayWin   Float
  timestamp DateTime @default(now())
}

model Prediction {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  match       Match    @relation(fields: [matchId], references: [id])
  matchId     String   @db.ObjectId
  user        User     @relation(fields: [userId], references: [id])
  userId      String   @db.ObjectId
  prediction  String   # WIN_HOME, DRAW, WIN_AWAY
  confidence  Float
  reasoning   String
  isCorrect   Boolean?
  createdAt   DateTime @default(now())
}

enum MatchStatus {
  SCHEDULED
  LIVE
  FINISHED
  CANCELLED
}

enum MatchResult {
  HOME_WIN
  DRAW
  AWAY_WIN
}