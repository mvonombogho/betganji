generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String       @id @default(cuid())
  email         String       @unique
  name          String?
  password      String
  predictions   Prediction[]
  createdAt     DateTime     @default(now())
  updatedAt     DateTime     @updatedAt
}

model Match {
  id            String       @id @default(cuid())
  homeTeamId    String
  awayTeamId    String
  homeTeam      Team         @relation("HomeTeam", fields: [homeTeamId], references: [id])
  awayTeam      Team         @relation("AwayTeam", fields: [awayTeamId], references: [id])
  competitionId String
  competition   Competition  @relation(fields: [competitionId], references: [id])
  datetime      DateTime
  status        MatchStatus
  odds          Odds[]
  predictions   Prediction[]
  createdAt     DateTime     @default(now())
  updatedAt     DateTime     @updatedAt
}

model Team {
  id            String       @id @default(cuid())
  name          String
  logo          String?
  homeMatches   Match[]      @relation("HomeTeam")
  awayMatches   Match[]      @relation("AwayTeam")
  createdAt     DateTime     @default(now())
  updatedAt     DateTime     @updatedAt
}

model Competition {
  id            String       @id @default(cuid())
  name          String
  country       String
  matches       Match[]
  createdAt     DateTime     @default(now())
  updatedAt     DateTime     @updatedAt
}

model Odds {
  id            String       @id @default(cuid())
  matchId       String
  match         Match        @relation(fields: [matchId], references: [id])
  provider      String
  homeWin       Float
  draw          Float
  awayWin       Float
  timestamp     DateTime
  createdAt     DateTime     @default(now())
  updatedAt     DateTime     @updatedAt
}

model Prediction {
  id            String       @id @default(cuid())
  matchId       String
  match         Match        @relation(fields: [matchId], references: [id])
  userId        String
  user          User         @relation(fields: [userId], references: [id])
  result        String
  confidence    Float
  insights      Json
  createdAt     DateTime     @default(now())
  updatedAt     DateTime     @updatedAt
}

enum MatchStatus {
  SCHEDULED
  LIVE
  FINISHED
  CANCELLED
}